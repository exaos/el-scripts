#-*- mode: org; -*-
#+TITLE: README about "app-envsel"

* How to use app-envsel

** Install and setup
   + Install
     1. Copy app-envsel.py to the directory in your PATH setting
     2. chmod +x app-envsel.py
     3. ln -s app-envsel.py app-envsel
   + Initialization
     - System-wide setup ::  app-envsel init -s
     - User-wide setup   ::  app-envsel init -u
   + Setup application data
     - Add one application version
       * command: app-envsel register/reg <app> <version>
     - Delete one application version
       * command: app-envsel remove/rm <app> <version>
     - Remove all versions of one application
       * command: app-envsel remove/rm <app> -a

** User commands
   + List application's versions
     - command: app-envsel list/ls [opt] [<app>]
   + Set version for <app>
     - command: app-envsel set [opt] <app> <ver>
     - options: -s --- system-wide
   + Unset version for <app>
     - command: app-envsel unset [opt] [<app>]
     - options: -s --- system-wide

* Code information
  + app-envsel.py
    - check both system- and user-wide data directory
    - check both system- and user-wide setting for one app
    - command processing
    - Structure
      1. app_envdata --- Class to handle the environment repository
	 1) set_datadir
	 2) init_datadir
	 3) check_apprc
	 4) check_datadir
	 5) check_sh_rc
	 6) check_envsel
	 7) remove
	 8) register
	 9) list_all
      2. app_envsel  --- Class to handle one application
	 1) check_envsel
	 2) remove
	 3) register
	 4) list
	 5) set
	 6) unset
      3. cmd_process --- Command parser and processor
  + Data structure
    - Versions startup script is stored in data dir as <app>_<ver>.sh
    - System- or user-wide selection is write to file <env-path>/<app>
  + app-rc.sh
    - encoded the zipped content in base64, and added to app-envsel.py
    - First check user's setting then system's
    - First check user's versions then system's

* Changelog
  + 2010-01-12: Finish all features planned first
  + 2010-01-07: Initialized project

